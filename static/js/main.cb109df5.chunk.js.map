{"version":3,"sources":["components/Form.js","redux/actions.js","components/Note.js","components/FilterBar.js","components/NotesList.js","hooks/useOnScreen.js","components/Main.js","redux/reducer.js","redux/store.js","App.js","index.js"],"names":["Form","saveHandler","useState","noteTitle","noteBody","note","setNote","clear","className","htmlFor","value","onChange","e","target","type","id","placeholder","rows","onClick","url","SET_NOTES","DELL_NOTE","UPDATE_NOTES_NUMBER","HAS_MORE","CLEAR","setNotes","notes","payload","updateNotesNumber","newNumber","serverHasMoreAction","clearState","deleteNote","dispatch","fetch","method","then","response","ok","Error","status","toString","dellNote","console","log","getNotes","getState","skip","Number","loadedNotes","json","length","catch","error","message","Note","removeNotes","isEdit","setIsEdit","editedNote","setEditedNote","useDispatch","updatedNote","headers","body","JSON","stringify","err","updateNote","FilterBar","keyword","setKeyword","searchHandler","clearSearch","NotesList","options","ref","setRef","visible","setVisible","useEffect","observer","IntersectionObserver","entry","isIntersecting","observe","unobserve","useOnScreen","hasMore","useSelector","state","serverHasMore","searchRes","setSearchRes","query","map","index","_id","Main","newNote","addNote","initialState","store","createStore","action","filter","composeWithDevTools","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb109df5.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nconst Form = ({saveHandler}) => {\n\n    const [note,setNote] = useState({noteTitle:\"\",noteBody:\"\"});\n\n    const clear = () => {\n        setNote({noteTitle:\"\",noteBody:\"\"});\n    }\n\n    const saveNewNoteHandler = () => {\n        if(note.noteTitle && note.noteBody){\n            saveHandler(note);\n            clear();\n        }\n    }\n\n    return (\n        <div className=\"text-center bg-warning rounded p-2\">\n            <div className=\"mb-3\">\n                <label htmlFor=\"exampleFormControlInput1\" className=\"form-label text-danger\"><strong>Введите заголовок:</strong></label>\n                <input value={note.noteTitle}\n                       onChange={(e)=>setNote({...note,noteTitle:e.target.value})}\n                       type=\"text\"\n                       className=\"form-control\"\n                       id=\"exampleFormControlInput1\"\n                       placeholder=\"Заголовок\"/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label text-danger m-1\"><strong>Текст заметки:</strong></label>\n                <textarea\n                    value={note.noteBody}\n                    onChange={(e)=>setNote({...note,noteBody:e.target.value})}\n                    className=\"form-control\"\n                    id=\"exampleFormControlTextarea1\"\n                    rows=\"3\"\n                    placeholder=\"Текст заметки\"/>\n            </div>\n            <div>\n                <button className=\"btn btn-outline-danger m-1\" onClick={saveNewNoteHandler}>Сохранить</button>\n                <button className=\"btn btn-outline-danger m-1\" onClick={clear}>Очистить</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Form;","export const url = \"https://server-for-notes.herokuapp.com/notes/\";\nexport const localUrl = \"http://localhost:5000/notes/\";\nexport const SET_NOTES = \"SET_NOTES\";\nexport const DELL_NOTE = \"DELL_NOTE\";\nexport const UPDATE_NOTES_NUMBER = \"UPDATE_NOTES_NUMBER\";\nexport const HAS_MORE = \"HAS_MORE\";\nexport const CLEAR = \"CLEAR\";\n\n\nexport const setNotes = (notes) => ({\n    type: SET_NOTES,\n    payload: notes\n})\n\nexport const dellNote = (id) => ({\n    type: DELL_NOTE,\n    payload: id\n})\n\nexport const updateNotesNumber = (newNumber) => ({\n    type: UPDATE_NOTES_NUMBER,\n    payload: newNumber\n})\n\nexport const serverHasMoreAction = () => ({\n    type: HAS_MORE\n})\n\nexport const clearState = () => ({\n    type: CLEAR\n})\n\n\nexport const addNote = (newNote) => {\n    return (dispatch) => {\n        fetch(url + \"add\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newNote)\n        })\n            .then(response => {\n                if (response.ok) {\n                    console.log(\"Note Added\");\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n            .then(() => dispatch(getNotes()))\n            .catch(err => console.log(err));\n    }\n}\n\nexport const updateNote = (id, updatedNote) => {\n    return (dispatch) => {\n        fetch(url + \"update/\" + id, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(updatedNote)\n        })\n            .then(response => {\n                if (response.ok) {\n                    console.log(`Note id ${id} updated!`);\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n            .then(() => dispatch(getNotes()))\n            .catch(err => console.log(err));\n    }\n}\n\nexport const deleteNote = (id) => {\n    return (dispatch) => {\n        fetch(url + id, {method: \"DELETE\"})\n            .then(response => {\n                if (response.ok) {\n                    dispatch(dellNote(id));\n                    console.log(`Note with id ${id} deleted!`);\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n    }\n}\n\nexport const getNotes = () => {\n    return (dispatch, getState) => {\n        const skip = Number(getState().loadedNotes);\n        fetch(url + \"?skip=\" + skip, {method: \"GET\"})\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n            .then(notes => {\n                dispatch(setNotes(notes));\n                dispatch(updateNotesNumber(skip + notes.length));\n                if (!notes.length) {\n                    dispatch(serverHasMoreAction());\n                }\n            })\n            .catch(error => console.log(error.message));\n    }\n}\n\nexport const getNotesSearch = (query) => {\n    return (dispatch, getState) => {\n        const skip = Number(getState().loadedNotes);\n        fetch(url+\"search/\" + query + \"?skip=\" + skip, {method: \"GET\"})\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n            .then(notes => {\n                dispatch(setNotes(notes));\n                dispatch(updateNotesNumber(skip + notes.length));\n                if (!notes.length) {\n                    dispatch(serverHasMoreAction());\n                }\n            })\n            .catch(error => console.log(error.message));\n\n    }\n}\n\n","import React, {useState} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {updateNote} from \"../redux/actions\";\n\nconst Note = ({removeNotes, note, id}) => {\n\n    const [isEdit, setIsEdit] = useState(false);\n    const [editedNote, setEditedNote] = useState({noteTitle: note.noteTitle, noteBody: note.noteBody});\n    const dispatch = useDispatch();\n\n    const saveEditedNoteHandler = () => {\n        if (editedNote.noteTitle && editedNote.noteTitle) {\n            dispatch(updateNote(id, editedNote));\n            setIsEdit(false);\n        }\n    }\n\n    switch (isEdit) {\n        case true:\n            return (\n                <li className=\"bg-warning rounded m-2 p-2 text-center list-group\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <input value={editedNote.noteTitle}\n                                   onChange={(e) => setEditedNote({...editedNote, noteTitle: e.target.value})}\n                                   type=\"text\"\n                                   className=\"form-control\"\n                                   placeholder=\"Заголовок\"/>\n                            <textarea\n                                value={editedNote.noteBody}\n                                onChange={(e) => setEditedNote({...editedNote, noteBody: e.target.value})}\n                                className=\"form-control\"\n                                rows=\"3\"\n                                placeholder=\"Текст заметки\"/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-danger m-1\" onClick={saveEditedNoteHandler}>\n                                <i className=\"bi bi-save text-warning\"></i>\n                            </button>\n                        </div>\n                        <div className=\"col\">\n                            <button className=\"btn btn-danger m-1\" onClick={() => setIsEdit(false)}>\n                                <i className=\"bi bi-x-square text-warning\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </li>\n            )\n        case false:\n            return (\n                <li className=\"bg-warning rounded m-2 p-2 text-center list-group\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <p className=\"bg-danger rounded text-light\"><strong>{note.noteTitle}</strong></p>\n                            <p>{note.noteBody}</p>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button\n                                className=\"btn btn-danger m-1\"\n                                onClick={() => removeNotes(id)}>\n                                <i className=\"bi bi-trash text-warning\"></i>\n                            </button>\n\n                        </div>\n                        <div className=\"col\">\n                            <button\n                                className=\"btn btn-danger m-1\" onClick={() => setIsEdit(true)}>\n                                <i className=\"bi bi-pencil-square text-warning\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </li>\n            );\n        default: return(<div className=\"bg-warning rounded m-2 p-2 text-center\">Loading...</div>)\n    }\n};\n\nexport default Note;","import React from 'react';\n\n\nconst FilterBar = ({keyword, setKeyword, searchHandler, clearSearch}) => {\n\n\n    return (\n        <li className=\"bg-warning rounded m-2 p-2 text-center list-group\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Поиск\"\n                        className=\"form-control w-50 m-auto\"\n                        value={keyword}\n                        onChange={(e) => setKeyword(e.target.value)}\n                    />\n                </div>\n\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-danger m-2 text-warning\"\n                        onClick={searchHandler}\n                    >Search\n                    </button>\n                </div>\n                <div className=\"col-6\">\n                    <button\n                        className=\"btn btn-danger m-2 text-warning\"\n                        onClick={clearSearch}\n                    >Clear\n                    </button>\n                </div>\n            </div>\n        </li>\n\n    );\n};\n\nexport default FilterBar;","import React, {useEffect, useState} from 'react';\nimport Note from \"./Note\";\nimport useOnScreen from \"../hooks/useOnScreen\";\nimport {clearState, getNotes, getNotesSearch} from \"../redux/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport FilterBar from \"./FilterBar\";\n\nconst NotesList = ({notes, removeNotes}) => {\n    const [setRef, visible] = useOnScreen();\n    const dispatch = useDispatch();\n    const hasMore = useSelector(state => state.serverHasMore);\n\n    const [keyword, setKeyword] = useState(\"\");\n    const [searchRes, setSearchRes] = useState(false);\n\n    const clearSearch = () => {\n        setKeyword(\"\");\n        setSearchRes(false);\n        dispatch(clearState());\n    }\n\n    const searchHandler = () => {\n        if (keyword) {\n            setSearchRes(true);\n            dispatch(clearState());\n        }\n    }\n\n    useEffect(() => {\n        if (visible) {\n            if (!searchRes) {\n                dispatch(getNotes());\n            } else {\n                dispatch(getNotesSearch(keyword));\n            }\n        }\n        // eslint-disable-next-line\n    }, [visible, searchRes, dispatch]);\n\n    return (\n        <div>\n            <ul>\n                <FilterBar\n                    searchHandler={searchHandler}\n                    keyword={keyword}\n                    setKeyword={setKeyword}\n                    clearSearch={clearSearch}\n                />\n                {notes.map((note, index) => {\n                        return <Note\n                            note={note}\n                            key={note._id}\n                            id={note._id}\n                            index={index}\n                            removeNotes={removeNotes}/>\n                    }\n                )}\n            </ul>\n            <div ref={hasMore ? setRef : null}></div>\n        </div>\n    );\n}\n\nexport default NotesList;","import { useState, useEffect,  } from \"react\";\n\n\nexport default function useOnScreen(options) {\n    const [ref,setRef] = useState(null);\n    const [visible, setVisible] = useState(true);\n    useEffect(() => {\n        const observer = new IntersectionObserver(\n            ([entry]) => {\n                // Update our state when observer callback fires\n                setVisible(entry.isIntersecting);\n            }, options);\n        if (ref) {\n            observer.observe(ref);\n        }\n        return () => {\n            if(ref){\n                observer.unobserve(ref);\n            }\n        };\n    }, [ref,options]);\n    return [setRef,visible];\n}","import React from 'react';\nimport Form from \"./Form\";\nimport NotesList from \"./NotesList\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addNote, deleteNote, getNotes} from \"../redux/actions\";\n\nconst Main = () => {\n    const dispatch = useDispatch();\n    const notes = useSelector(state => state.notes);\n\n    const removeNotes = (id) => {\n        dispatch(deleteNote(id));\n        dispatch(getNotes());\n    }\n\n    const saveHandler = (newNote) => {\n        dispatch(addNote(newNote));\n    }\n\n    return (\n        <>\n            <div className=\"container bg-danger my-2 p-2 align-content-center rounded\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-light\"><i className=\"bi bi-journal-bookmark-fill\"></i> Заметки</h2>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container bg-danger my-2 p-2 align-content-center rounded\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-light\">Заполни форму и нажми сохранить!</h2>\n                        <p className=\"text-light\">Все заметки сохраняются в базу данных Mondo DB Atlas</p>\n                    </div>\n                    <div className=\"row m-0\">\n                        <div className=\"col-4\">\n                            <Form saveHandler={saveHandler}/>\n                        </div>\n                        <div className=\"col-8 text-center\">\n                            <NotesList removeNotes={removeNotes} notes={notes}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    );\n};\n\nexport default Main;","import {CLEAR, DELL_NOTE, HAS_MORE, SET_NOTES, UPDATE_NOTES_NUMBER} from \"./actions\";\n\nconst initialState = {\n    notes: [],\n    loadedNotes:0,\n    serverHasMore:true\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_NOTES:\n            return {...state, notes: [...state.notes, ...action.payload]};\n        case DELL_NOTE:\n            return {...state, notes: state.notes.filter(note => note._id !== action.payload)};\n        case UPDATE_NOTES_NUMBER:\n            return {...state, loadedNotes: action.payload};\n        case HAS_MORE:\n            return {...state, serverHasMore: false};\n        case CLEAR:\n            return initialState;\n        default:\n            return state;\n    }\n}\n","import {applyMiddleware, createStore} from \"redux\";\nimport {reducer} from \"./reducer\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));","import 'bootstrap/dist/css/bootstrap.min.css';\nimport Main from \"./components/Main\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nfunction App() {\n  return (<Provider store={store}><Main/></Provider>);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}